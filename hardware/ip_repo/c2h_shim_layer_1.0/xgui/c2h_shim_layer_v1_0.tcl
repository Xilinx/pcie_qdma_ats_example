#
# Copyright (C) 2021 Xilinx, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License"). You may
# not use this file except in compliance with the License. A copy of the
# License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Generated by Vivado tools

# Definitional proc to organize widgets for parameters.
proc init_gui { IPINST } {
  ipgui::add_param $IPINST -name "Component_Name"
  #Adding Page
  set Page_0 [ipgui::add_page $IPINST -name "Page 0"]
  ipgui::add_param $IPINST -name "C_S00_AXI_DATA_WIDTH" -parent ${Page_0} -widget comboBox
  ipgui::add_param $IPINST -name "C_S00_AXI_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_S00_AXI_BASEADDR" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_S00_AXI_HIGHADDR" -parent ${Page_0}
  ipgui::add_param $IPINST -name "FIFO_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "FIFO_DATA_COUNT_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "DSC_FIFO_DATA_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "DATA_FIFO_DATA_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "S_AXIS_C2H_CMPT_DATA_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "S_AXIS_C2H_DATA_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "CMPT_FIFO_DATA_WIDTH" -parent ${Page_0}


}

proc update_PARAM_VALUE.CMPT_FIFO_DATA_WIDTH { PARAM_VALUE.CMPT_FIFO_DATA_WIDTH } {
	# Procedure called to update CMPT_FIFO_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.CMPT_FIFO_DATA_WIDTH { PARAM_VALUE.CMPT_FIFO_DATA_WIDTH } {
	# Procedure called to validate CMPT_FIFO_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.DATA_FIFO_DATA_WIDTH { PARAM_VALUE.DATA_FIFO_DATA_WIDTH } {
	# Procedure called to update DATA_FIFO_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.DATA_FIFO_DATA_WIDTH { PARAM_VALUE.DATA_FIFO_DATA_WIDTH } {
	# Procedure called to validate DATA_FIFO_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.DSC_FIFO_DATA_WIDTH { PARAM_VALUE.DSC_FIFO_DATA_WIDTH } {
	# Procedure called to update DSC_FIFO_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.DSC_FIFO_DATA_WIDTH { PARAM_VALUE.DSC_FIFO_DATA_WIDTH } {
	# Procedure called to validate DSC_FIFO_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.FIFO_DATA_COUNT_WIDTH { PARAM_VALUE.FIFO_DATA_COUNT_WIDTH } {
	# Procedure called to update FIFO_DATA_COUNT_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.FIFO_DATA_COUNT_WIDTH { PARAM_VALUE.FIFO_DATA_COUNT_WIDTH } {
	# Procedure called to validate FIFO_DATA_COUNT_WIDTH
	return true
}

proc update_PARAM_VALUE.FIFO_DEPTH { PARAM_VALUE.FIFO_DEPTH } {
	# Procedure called to update FIFO_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.FIFO_DEPTH { PARAM_VALUE.FIFO_DEPTH } {
	# Procedure called to validate FIFO_DEPTH
	return true
}

proc update_PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH { PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH } {
	# Procedure called to update S_AXIS_C2H_CMPT_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH { PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH } {
	# Procedure called to validate S_AXIS_C2H_CMPT_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH { PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH } {
	# Procedure called to update S_AXIS_C2H_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH { PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH } {
	# Procedure called to validate S_AXIS_C2H_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.C_S00_AXI_DATA_WIDTH { PARAM_VALUE.C_S00_AXI_DATA_WIDTH } {
	# Procedure called to update C_S00_AXI_DATA_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_S00_AXI_DATA_WIDTH { PARAM_VALUE.C_S00_AXI_DATA_WIDTH } {
	# Procedure called to validate C_S00_AXI_DATA_WIDTH
	return true
}

proc update_PARAM_VALUE.C_S00_AXI_ADDR_WIDTH { PARAM_VALUE.C_S00_AXI_ADDR_WIDTH } {
	# Procedure called to update C_S00_AXI_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_S00_AXI_ADDR_WIDTH { PARAM_VALUE.C_S00_AXI_ADDR_WIDTH } {
	# Procedure called to validate C_S00_AXI_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_S00_AXI_BASEADDR { PARAM_VALUE.C_S00_AXI_BASEADDR } {
	# Procedure called to update C_S00_AXI_BASEADDR when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_S00_AXI_BASEADDR { PARAM_VALUE.C_S00_AXI_BASEADDR } {
	# Procedure called to validate C_S00_AXI_BASEADDR
	return true
}

proc update_PARAM_VALUE.C_S00_AXI_HIGHADDR { PARAM_VALUE.C_S00_AXI_HIGHADDR } {
	# Procedure called to update C_S00_AXI_HIGHADDR when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_S00_AXI_HIGHADDR { PARAM_VALUE.C_S00_AXI_HIGHADDR } {
	# Procedure called to validate C_S00_AXI_HIGHADDR
	return true
}


proc update_MODELPARAM_VALUE.C_S00_AXI_DATA_WIDTH { MODELPARAM_VALUE.C_S00_AXI_DATA_WIDTH PARAM_VALUE.C_S00_AXI_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_S00_AXI_DATA_WIDTH}] ${MODELPARAM_VALUE.C_S00_AXI_DATA_WIDTH}
}

proc update_MODELPARAM_VALUE.C_S00_AXI_ADDR_WIDTH { MODELPARAM_VALUE.C_S00_AXI_ADDR_WIDTH PARAM_VALUE.C_S00_AXI_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_S00_AXI_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_S00_AXI_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.S_AXIS_C2H_DATA_WIDTH { MODELPARAM_VALUE.S_AXIS_C2H_DATA_WIDTH PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.S_AXIS_C2H_DATA_WIDTH}] ${MODELPARAM_VALUE.S_AXIS_C2H_DATA_WIDTH}
}

proc update_MODELPARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH { MODELPARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH}] ${MODELPARAM_VALUE.S_AXIS_C2H_CMPT_DATA_WIDTH}
}

proc update_MODELPARAM_VALUE.FIFO_DEPTH { MODELPARAM_VALUE.FIFO_DEPTH PARAM_VALUE.FIFO_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.FIFO_DEPTH}] ${MODELPARAM_VALUE.FIFO_DEPTH}
}

proc update_MODELPARAM_VALUE.FIFO_DATA_COUNT_WIDTH { MODELPARAM_VALUE.FIFO_DATA_COUNT_WIDTH PARAM_VALUE.FIFO_DATA_COUNT_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.FIFO_DATA_COUNT_WIDTH}] ${MODELPARAM_VALUE.FIFO_DATA_COUNT_WIDTH}
}

proc update_MODELPARAM_VALUE.DSC_FIFO_DATA_WIDTH { MODELPARAM_VALUE.DSC_FIFO_DATA_WIDTH PARAM_VALUE.DSC_FIFO_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.DSC_FIFO_DATA_WIDTH}] ${MODELPARAM_VALUE.DSC_FIFO_DATA_WIDTH}
}

proc update_MODELPARAM_VALUE.DATA_FIFO_DATA_WIDTH { MODELPARAM_VALUE.DATA_FIFO_DATA_WIDTH PARAM_VALUE.DATA_FIFO_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.DATA_FIFO_DATA_WIDTH}] ${MODELPARAM_VALUE.DATA_FIFO_DATA_WIDTH}
}

proc update_MODELPARAM_VALUE.CMPT_FIFO_DATA_WIDTH { MODELPARAM_VALUE.CMPT_FIFO_DATA_WIDTH PARAM_VALUE.CMPT_FIFO_DATA_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.CMPT_FIFO_DATA_WIDTH}] ${MODELPARAM_VALUE.CMPT_FIFO_DATA_WIDTH}
}

